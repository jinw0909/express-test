<!DOCTYPE html>
<html>
<head>
    <title>Recent Analysis</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        li {
            display: none; /* Hide elements but keep the space */
            opacity: 0;
            transition: opacity 1s linear; /* Delay visibility to match opacity */
        }
        li:first-child {
            display: block;
            opacity: 1;
        }
        #thumbnails {
            display: flex;
            align-items: stretch;
            flex-wrap: wrap;
            justify-content: center;
        }
        .thumbnail {
            display: flex;
            flex-direction: column;
            margin: 10px;
            cursor: pointer;
            border: 1px solid black;
        }
        .imgBox {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .thumbnail img {
            width: 100px; /* Adjust as needed */
            height: auto;
        }

        .article-index {
            display: block;
            text-align: center;
            padding: 4px 0;
            background-color: #ddd;
        }
        #analysisList {
            min-height: 50vh;
            border: 1px solid #999;
            border-radius: 8px;
            padding: 2rem;
            max-width: 80vw;
        }
        .viewpoint-index {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        img { width: 100%; }
        .imgDiv { width: 100%; overflow-y: scroll; max-height: 400px;}
        .main-summary { margin-top: 1rem; display: none; }
        .script-text { display: none; }
        .article-text { display: none; }
        .main-inner {
            max-width: 768px;
            margin: auto;
        }
        .buttons { margin-top: 1rem; padding: .5rem 1rem; width: 10rem; }
    </style>
</head>
<body>

<% const texts = {
    en: {
        openScript: 'Open Script',
        closeScript: 'Close Script',
        openSummary: 'Open Summary',
        closeSummary: 'Close Summary',
        openArticle: 'Open Article',
        closeArticle: 'Close Article'
    },
    kr: {
        openScript: '스크립트 열기',
        closeScript: '스크립트 닫기',
        openSummary: '요약 열기',
        closeSummary: '요약 닫기',
        openArticle: '기사 열기',
        closeArticle: '기사 닫기'
    },
    jp: {
        openScript: 'スクリプトを開く',
        closeScript: 'スクリプトを閉じる',
        openSummary: 'サマリーを開く',
        closeSummary: 'サマリーを閉じる',
        openArticle: '記事を開く',
        closeArticle: '記事を閉じる'
    },
    vn: {
        openScript: 'Mở kịch bản',
        closeScript: 'Đóng kịch bản',
        openSummary: 'Mở tóm tắt',
        closeSummary: 'Đóng tóm tắt',
        openArticle: 'Mở bài viết',
        closeArticle: 'Đóng bài viết'
    },
    cn: {
        openScript: '打开脚本',
        closeScript: '关闭脚本',
        openSummary: '打开摘要',
        closeSummary: '关闭摘要',
        openArticle: '打开文章',
        closeArticle: '关闭文章'
    }
}[lang]; %>

<script>
    // Embed the language-specific texts into JavaScript variables
    const openScriptText = '<%= texts.openScript %>';
    const closeScriptText = '<%= texts.closeScript %>';
    const openSummaryText = '<%= texts.openSummary %>';
    const closeSummaryText = '<%= texts.closeSummary %>';
    const openArticleText = '<%= texts.openArticle %>';
    const closeArticleText = '<%= texts.closeArticle %>';
    console.log("openScriptText: ", openScriptText);
    console.log("closeScriptText: ", closeScriptText);
    console.log("openSummaryText: ", openSummaryText);
    console.log("closeSummaryText: ", closeSummaryText);
    console.log("openArticleText: ", openArticleText);
    console.log("closeArticleText: ", closeArticleText);
</script>

<div class="main-container">
<div class="main-inner">
<%
    // Extract the month, date, and period from viewpoint.id
    const idParts = viewpoint.id.split('_');
    const datePart = idParts[0];
    const periodPart = idParts[1];
    const year = datePart.substring(0, 4);
    const month = datePart.substring(4, 6);
    const day = datePart.substring(6, 8);

    // Format the period based on the language
    let periodFormatted = '';
    if (lang === 'jp') {
        periodFormatted = periodPart === 'AM' ? '朝' : '午後';
    } else if (lang === 'kr') {
        periodFormatted = periodPart === 'AM' ? '아침' : '오후';
    } else if (lang === 'vn') {
        periodFormatted = periodPart === 'AM' ? 'buổi sáng' : 'buổi chiều';
    } else if (lang === 'cn') {
        periodFormatted = periodPart === 'AM' ? '早上' : '下午';
    } else {
        periodFormatted = periodPart === 'AM' ? 'Morning' : 'Afternoon';
    }

    // Format the date based on the language
    let dateFormatted = '';
    if (lang === 'jp') {
        dateFormatted = `${month}月 ${day}日 ${periodFormatted}`;
    } else if (lang === 'kr') {
        dateFormatted = `${parseInt(month)}월 ${parseInt(day)}일 ${periodFormatted}`;
    } else if (lang === 'vn') {
        dateFormatted = `ngày ${parseInt(day)} tháng ${parseInt(month)}, ${periodFormatted}`;
    } else if (lang === 'cn') {
        dateFormatted = `${month}月 ${day}日 ${periodFormatted}`;
    } else {
        dateFormatted = `${month}/${day} ${periodFormatted}`;
    }
%>
<h1>
    <%= dateFormatted %>
    <% if (lang === 'jp') { %>
        ブリーフィング
    <% } else if (lang === 'kr') { %>
        브리핑
    <% } else if (lang === 'vn') { %>
        sự trình bày tóm tắt, sự điểm lại
    <% } else if (lang === 'cn') { %>
        简报
    <% } else { %>
        Briefing
    <% } %>
</h1>
<div class="select-lang">
    <a href="/run?lang=en" id="selectEn">English</a>
    <a href="/run?lang=jp" id="selectJp">日本語</a>
    <a href="/run?lang=kr" id="selectKr">한국어</a>
    <a href="/run?lang=vn" id="selectVn">tiếng Việt</a>
    <a href="/run?lang=cn" id="selectCn">汉文</a>
</div>
<button id="playButton">
    <% if (lang === 'jp') { %>
        プレイ
    <% } else if (lang === 'kr') { %>
        재생
    <% } else { %>
        Play
    <% } %>
</button>
<button id="pauseButton">
    <% if (lang === 'jp') { %>
        停止
    <% } else if (lang === 'kr') { %>
        정지
    <% } else { %>
        Pause
    <% } %>
</button>
<ul id="analysisList">
    <% analyses.forEach(function(analysis, index) { %>
        <li id="item<%= index %>">
            <h2>
                <%= analysis.title%>
            </h2>
            <p><%= analysis.createdAt.toISOString() %><br></p>
            <div class="imgDiv">
                <img src="<%= analysis.imageUrl %>" alt="analysis image"><br>
            </div>
            <div><button id="openBtn<%= index %>" class="open-summary buttons"><%= texts.openSummary%></button></div>
            <p id="summary<%= index%>" class="main-summary">
                <%= analysis.summary%>
            </p>
            <div><button id="open<%= index %>" class="open-script buttons"><%= texts.openScript%></button></div>
            <p id="script<%= index %>" class="script-text">
                <%= analysis.analysis%>
            </p>
            <div><button id="openArticle<%= index %>" class="open-article buttons"><%= texts.openArticle%></button></div>
            <p id="article<%= index%>" class="article-text">
                <%= analysis.content%>
            </p>
        </li>
    <% }) %>
    <li id="item<%= analyses.length %>">
        <h2>
            <% if (lang === 'jp') { %>
                まとめ Viewpoint
            <% } else if (lang === 'kr') { %>
                최종 Viewpoint
            <% } else { %>
                Final Viewpoint
            <% } %>
        </h2>
        <div>
            <%= viewpoint.viewpoint%>
        </div>
    </li>
</ul>
<div id="thumbnails">
    <% analyses.forEach(function(analysis, index) { %>
        <div class="thumbnail" data-index="<%= index %>">
            <span class="article-index">
                <% if (lang === 'jp') { %>
                    記事<%= index + 1 %>
                <% } else if (lang === 'kr') { %>
                    기사<%= index + 1 %>
                <% } else { %>
                    Article <%= index + 1 %>
                <% } %>
            </span>
            <div class="imgBox">
                <img src="<%= analysis.imageUrl %>" alt="Thumb <%= index %>">
            </div>
        </div>
    <% }) %>
    <div class="thumbnail" data-index="<%= analyses.length %>">
        <span class="viewpoint-index">Viewpoint</span>
    </div>
    </div>
</div>
</div>


<script>
    const listItems = document.querySelectorAll('li');
    let currentAudioIndex = 0;
    // let currentAudio = document.getElementById(`audio${currentAudioIndex}`);
    // currentAudio.hasStarted = false;
    // const delayBetweenAudios = 1000;
    const thumbnails = document.querySelectorAll('.thumbnail');
    //
    thumbnails.forEach(thumb => {
        thumb.addEventListener('click', function() {
            currentAudioIndex = parseInt(this.getAttribute('data-index'));
            prepareAudio(currentAudioIndex);
        });
    });
    //
    // document.getElementById('playButton').addEventListener('click', function() {
    //     if (currentAudio.hasStarted && currentAudio.paused) {
    //         currentAudio.play();
    //     } else {
    //         playAudio(currentAudioIndex);
    //     }
    // });
    //
    // document.getElementById('pauseButton').addEventListener('click', function() {
    //     pauseAudio();
    // });
    //
    function prepareAudio(index) {

        // Fade out all list items before fading in the selected one
        listItems.forEach((item, idx) => {
            if (idx !== index) {
                item.style.opacity = 0;
                setTimeout(() => {
                    item.style.display = 'none';
                }, 1000); // Match the duration of the fade out effect
            }
        });
        // Delay the fadeIn to allow other items to fade out smoothly
        setTimeout(() => {
            fadeIn(listItems[index]); // Fade in the current list item
        }, 1000);
    }
    // function playAudio(index) {
    //     stopAllAudios();
    //     // console.log("idx: ", index);
    //     listItems.forEach(item => {
    //         item.style.display = 'none';
    //         item.style.opacity = '0';
    //     });
    //     //listItems[index].style.display = 'block';
    //     fadeIn(listItems[index]);
    //
    //     currentAudio = document.getElementById(`audio${index}`);
    //     currentAudio.play();
    //     currentAudio.hasStarted = true;
    //     currentAudio.onended = function() {
    //         fadeOut(listItems[currentAudioIndex], function() {
    //             currentAudioIndex++;
    //             if (currentAudioIndex < listItems.length) {
    //                 setTimeout(function() {
    //                     playAudio(currentAudioIndex);
    //                 }, delayBetweenAudios);
    //             }
    //         });
    //     };
    // }
    // function pauseAudio() {
    //     if (currentAudio) {
    //         currentAudio.pause();
    //     }
    // }
    // function stopAllAudios() {
    //     let audios = document.querySelectorAll('audio');
    //     audios.forEach(audio => {
    //         audio.pause();
    //         audio.currentTime = 0;
    //         audio.hasStarted = false;
    //     });
    // }

    function fadeIn(element) {
        element.style.display = 'block';
        setTimeout(function() {
            element.style.opacity = 1;
        }, 10); // Start fade-in after a short delay to ensure display: block takes effect
    }

    function fadeOut(element, callback) {
        console.log("id: ", element.id);
        if (element.id !== `item${listItems.length - 1}`) {
            element.style.opacity = 0;
            setTimeout(function() {
                element.style.display = 'none';
                if (callback) callback();
            }, 1000); // Duration should match transition duration
        } else {
            if (callback) callback();
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Add event listeners to all buttons for toggling visibility of scripts
        const buttons = document.querySelectorAll('.open-script'); // Selects all buttons whose id starts with 'open'
        buttons.forEach(button => {
            button.addEventListener('click', function() {
                const index = this.id.replace('open', ''); // Extract index from the id of the button
                const scriptElement = document.getElementById('script' + index);
                if (scriptElement.style.display === 'none' || !scriptElement.style.display) {
                    scriptElement.style.display = 'block'; // Show the script
                    this.textContent = closeScriptText;
                } else {
                    scriptElement.style.display = 'none'; // Hide the script
                    this.textContent = openScriptText;
                }
            });
        });

        const btns = document.querySelectorAll('.open-summary'); // Selects all buttons whose id starts with 'open'
        btns.forEach(button => {
            button.addEventListener('click', function() {
                const index = this.id.replace('openBtn', ''); // Extract index from the id of the button
                const summaryElement = document.getElementById('summary' + index);
                if (summaryElement.style.display === 'none' || !summaryElement.style.display) {
                    summaryElement.style.display = 'block'; // Show the script
                    this.textContent = closeSummaryText;
                } else {
                    summaryElement.style.display = 'none'; // Hide the script
                    this.textContent = openSummaryText;
                }
            });
        });

        const btnArr = document.querySelectorAll('.open-article'); // Selects all buttons whose id starts with 'open'
        btnArr.forEach(button => {
            button.addEventListener('click', function() {
                const index = this.id.replace('openArticle', ''); // Extract index from the id of the button
                const articleElement = document.getElementById('article' + index);
                if (articleElement.style.display === 'none' || !articleElement.style.display) {
                    articleElement.style.display = 'block'; // Show the script
                    this.textContent = closeArticleText;
                } else {
                    articleElement.style.display = 'none'; // Hide the script
                    this.textContent = openArticleText;
                }
            });
        });
    });

</script>
</body>
</html>
