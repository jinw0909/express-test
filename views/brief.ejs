<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Automated Briefing</title>
    <style>
        #articles-container div {
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        #articles-container p {
            margin: 5px 0;
        }
    </style>
</head>
<body>
<div class="container">
    <div class="send-request">
        <h4>1. Return Article Indexes</h4>
        <span id="flag"></span>
        <button class="send-btn-index">Send Request</button>
        <div class="result-div-index"></div>
    </div>
<!--    <div class="send-request-create" style="opacity: 0.5;">-->
<!--        <h4>Return Created Analysis</h4>-->
<!--        <span id="flag2"></span>-->
<!--        <button class="send-btn-create">Send Request</button>-->
<!--        <div class="result-div-create"></div>-->
<!--    </div>-->
    <div class="send-request-save">
        <h4>2. Create Analysis from indexes and insert to DB</h4>
        <span id="flag3"></span>
        <button class="send-btn-save">Send Request</button>
        <div class="result-div-save"></div>
    </div>
    <div class="send-request-recent">
        <h4>2-1. Get 5 Recent Analysis</h4>
        <span id="flag-r"></span>
        <button class="send-btn-recent">Send Request</button>
        <div class="result-div-recent" id="articles-container"></div>
    </div>
    <div class="send-request-construct">
        <h4>3. Construct the Full Analysis for the Recent 5 analysis</h4>
        <span id="flag4"></span>
        <button class="send-btn-construct">Send Request</button>
        <div class="result-div-construct"></div>
    </div>
    <div class="send-request-viewpoint">
        <h4>4. Create the Viewpoint for the Recent Analyses</h4>
        <span id="flag5"></span>
        <button class="send-btn-viewpoint">Send Request</button>
        <div class="result-div-viewpoint"></div>
    </div>
    <div class="send-request-constructvp">
        <h4>5. Construct the Viewpoint with Translation and Voices</h4>
        <span id="flag6"></span>
        <button class="send-btn-constructvp">Send Request</button>
        <div class="result-div-constructvp"></div>
    </div>
<!--    <div class="send-request-complete">-->
<!--        <h4>Run Step 1 to 5</h4>-->
<!--        <span id="flag7"></span>-->
<!--        <button class="send-btn-complete">Send Request</button>-->
<!--        <div class="result-div-complete"></div>-->
<!--    </div>-->
    <div class="send-request-intro">
        <h4>6. Create Intro</h4>
        <span id="flag-intro"></span>
        <button class="send-btn-intro">Send Request</button>
        <div class="result-div-intro"></div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>

    let candidates = null;

    document.querySelector('.send-btn-index').addEventListener('click', function() {
        document.querySelector('#flag').textContent = 'sent';
        axios.get('/function/index')
            .then(res => {
                console.log(res);
                // Parse the JSON string into a JavaScript object
                try {
                    candidates = JSON.parse(res.data)["selected_articles"];
                    console.log("candidates: ", candidates);
                    document.querySelector('.result-div-index').textContent = res.data;
                } catch (error) {
                    console.error("Parsing error:", error);
                    document.querySelector('.result-div-index').textContent = 'Invalid JSON format';
                }
                // document.querySelector('.send-request-create').style.opacity = "1";
            })
            .catch(err => {
                console.error(err);
            })
    });

    document.querySelector('.send-btn-save').addEventListener('click', function() {
        if (candidates) {
            document.querySelector('#flag3').textContent = "sent";
            axios.post('/function/index', {data: candidates}, {
                headers: {
                    'Content-Type': 'application/json'
                }
            }).then((response) => {
                console.log('POST success: ', response);
                const container = document.querySelector('.result-div-save');
                container.innerHTML = '';
                let analysis = JSON.parse(response.data);
                analysis.forEach(article => {
                    let divElem = document.createElement('div');
                    divElem.className = 'analysis';
                    let idDiv = document.createElement('div');
                    idDiv.textContent = `ID: ${article.id}`;
                    divElem.appendChild(idDiv);
                    let contentDiv = document.createElement('div');
                    contentDiv.textContent = `analysis: ${article.analysis}`;
                    divElem.appendChild(contentDiv);

                    container.appendChild(divElem);
                });
            }).catch(postError => {
                console.error('POST error: ', postError);
            });
        } else {
            console.error('No candidates to send');
            document.querySelector('#flag3').textContent = 'No candidates to send';
        }

    });

    document.querySelector('.send-btn-recent').addEventListener('click', function() {
       document.querySelector('#flag-r').textContent = "sent";
       axios.get('/function/recent').then((response) => {
           console.log("5 recent: ", response);
           const container = document.querySelector('#articles-container');
           container.innerHTML = ''; //Clear previous contents
           response.data.forEach((analysis) => {
                const articleDiv = document.createElement('div');
                const idPara = document.createElement('p');
                idPara.textContent = `ID: ${analysis.id}`;
               const analysisPara = document.createElement('p'); // Create a p tag for analysis
               analysisPara.textContent = `Analysis: ${analysis.analysis}`;
               const summaryPara = document.createElement('p'); // Create a p tag for summary
               summaryPara.textContent = `Summary: ${analysis.summary}`;
               articleDiv.appendChild(idPara);
               articleDiv.appendChild(analysisPara);
               articleDiv.appendChild(summaryPara);

               // Append the div to the container
               container.appendChild(articleDiv);
           })
       }).catch(error => {
           console.error(error);
       })

    });

    document.querySelector('.send-btn-construct').addEventListener('click', function() {
        document.querySelector('#flag4').textContent = "sent";
        axios.post('/create/complete')
            .then((response) => {
                console.log("post success: ", response);
            })
            .catch(err => {
                console.error("post failure: ", err);
            })
    });

    document.querySelector('.send-btn-viewpoint').addEventListener('click', function() {
        document.querySelector('#flag5').textContent = "sent";
        axios.get('/brief/viewpoint')
            .then((response) => {
                console.log("post success: ", response);
            })
            .catch(err => {
                console.error("post failure: ", err);
            })
    });

    document.querySelector('.send-btn-constructvp').addEventListener('click', function() {
       document.querySelector('#flag6').textContent = "sent";
       axios.get('/brief/constructvp')
           .then((response) => {
               console.log("success: ", response);
           })
           .catch(err => {
               console.error("failure ", err)
           })
    });

    document.querySelector('.send-btn-intro').addEventListener('click', function() {
        document.querySelector('#flag-intro').textContent = "sent";
        axios.get('/brief/intro')
            .then((response) => {
                console.log("success: ", response);
            })
            .catch(err => {
                console.error("failure ", err)
            })
    });





</script>
</body>
</html>